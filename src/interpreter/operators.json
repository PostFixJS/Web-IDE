{"functions":[{"description":"Pause the program execution and invoke the debugger. This is equivalent to setting a breakpoint.","tags":{},"name":"debugger","params":[],"returns":[]},{"description":"Open a window with a canvas to draw on.","tags":{"example":["\"Demo\" 200 200 [:angle 0 :speed 0.01] [\n  :on-tick (state) { # increase the angle by speed\n    state :angle state .:angle state .:speed + key-set\n  } lam\n\n  :on-draw (state) {\n    [:overlay [\n      [:rotate state .:angle [\n        :square 100 \"blue\"\n        :on-mouse-press (state x y) { # change the direction on click\n          state :speed 1 { -1 * } key-update\n        } lam\n      ]]\n      [:square 200 \"white\"]\n    ]]\n  } lam\n] show"]},"name":"show","params":[{"name":"title","type":":Str","description":"Window title"},{"name":"width","type":":Num","description":"Window width"},{"name":"height","type":":Num","description":"Window height"},{"name":"initialState","type":":Obj","description":"Initial state"},{"name":"callbacks","type":":Arr","description":"Event callbacks"}],"returns":[]},{"description":"Display an image in a new window.","tags":{"example":["# display a rotated orange square next to a blue circle that contains an orange circle\n[:beside [\n  [:rotate PI 4 / [:square 1 \"orange\"]]\n  [:overlay [\n    [:scale 0.5 [:circle 2 sqrt \"orange\"]]\n    [:circle 2 sqrt \"blue\"]\n  ]]\n]] show-image"]},"name":"show-image","params":[{"name":"image","type":":Arr","description":"Image to show"}],"returns":[]},{"description":"Download an image and serialize it into a data url that can be used with `:bitmap`.","tags":{},"name":"read-image-url","params":[{"name":"url","type":":Str","description":"Url of an image"}],"returns":[{"type":":Str","description":"Image as data url"}]},{"description":"Get the width of an image.","tags":{"example":["[:circle 200] image-width # returns 200"]},"name":"image-width","params":[{"name":"image","type":":Arr","description":"Image definition"}],"returns":[{"type":":Flt","description":"Image width"}]},{"description":"Get the height of an image.","tags":{"example":["[:rectangle 200 150] image-height # returns 150"]},"name":"image-height","params":[{"name":"image","type":":Arr","description":"Image definition"}],"returns":[{"type":":Flt","description":"Image height"}]},{"description":"Print a value.","tags":{},"name":"print","params":[{"name":"value","type":":Obj","description":"Value to print"}],"returns":[]},{"description":"Print a value and a line break.","tags":{},"name":"println","params":[{"name":"value","type":":Obj","description":"Value to print"}],"returns":[]},{"description":"Format the given string using the given parameters and print it. This uses a C-style format string, e.g. `%d` is used for integers, `%s` for strings and so on.","tags":{},"name":"printf","params":[{"name":"format","type":":Str","description":"Format string"},{"name":"params","type":":Arr","description":"Parameters"}],"returns":[]},{"description":"Format the given string using the given parameters and print it and a line break. This uses a C-style format string, e.g. `%d` is used for integers, `%s` for strings and so on.","tags":{},"name":"printfln","params":[{"name":"format","type":":Str","description":"Format string"},{"name":"params","type":":Arr","description":"Parameters"}],"returns":[]},{"description":"Read a single character from the input.","tags":{},"name":"read-char","params":[],"returns":[{"type":":Int","description":"The character code of the character that was read"}]},{"description":"Read a line from the input.","tags":{},"name":"read-line","params":[],"returns":[{"type":":Str","description":"The line that was read from the input"}]},{"description":"Read a line from the input and convert it to :Flt. Throws an error if the input cannot be converted to a float.","tags":{},"name":"read-flt","params":[],"returns":[{"type":":Flt","description":"The float that was read from the input"}]},{"description":"Read a line from the input and convert it to :Int. Throws an error if the input cannot be converted to an integer.","tags":{},"name":"read-int","params":[],"returns":[{"type":":Int","description":"The integer that was read from the input"}]},{"description":"Download the content at a URL as a string. If the download fails, an error is thrown.","tags":{},"name":"read-url","params":[{"name":"url","type":":Str","description":"URL to fetch"}],"returns":[{"type":":Str","description":"Downloaded content"}]},{"description":"Load a string that was previously stored in the browser storage using store-value.","tags":{},"name":"load-value","params":[{"name":"key","type":":Str","description":"Key of the value to load"}],"returns":[{"type":":Str","description":"Value loaded from the storage or nil if not found"}]},{"description":"Store a string in the browser storage.","tags":{},"name":"store-value","params":[{"name":"key","type":":Str","description":"Storage key, used to laod the value later"},{"name":"value","type":":Str","description":"Value to store"}],"returns":[]}]}
